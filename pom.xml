<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.openended</groupId>
  <artifactId>cloudurlwatcher</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>cloudurlwatcher</name>
  <description>Periodically watch a number of URLs using Google's App Engine cloud.</description>
  <inceptionYear>2011</inceptionYear>
  <url>https://github.com/jensfischerhh/cloudurlwatcher</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>jensfischerhh</id>
      <name>Jens Fischer</name>
      <email>soth@gmx.net</email>
      <roles>
        <role>owner</role>
      </roles>
    </developer>
  </developers>

  <contributors>
  </contributors>

  <scm>
    <url>http://github.com/jensfischerhh/cloudurlwatcher/tree/master</url>
    <connection>scm:git:git://github.com/jensfischerhh/cloudurlwatcher.git</connection>
    <developerConnection>scm:git:git://github.com/jensfischerhh/cloudurlwatcher.git</developerConnection>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/jensfischerhh/cloudurlwatcher/issues</url>
  </issueManagement>
  <ciManagement></ciManagement>
  <distributionManagement></distributionManagement>

  <prerequisites>
    <maven>2.0</maven>
  </prerequisites>

  <properties>
    <!-- Sets the project's default encoding. http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- This is just for "eclipse:eclipse" goal to always attempt downloading sources -->
    <downloadSources>true</downloadSources>

    <!-- Specify AppEngine version for your project. -->
    <!-- It should match SDK version pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
    <gae.version>1.4.3</gae.version>
    <datanucleus.version>1.1.5</datanucleus.version>
    <slf4j.version>1.6.1</slf4j.version>

    <!-- Upload to http://<version>.latest.<applicationName>.appspot.com by default -->
    <gae.application.version>${maven.build.timestamp}</gae.application.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1.1</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Google App Engine meta-package -->
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>${gae.version}</version>
      <type>pom</type>
      <exclusions>
        <exclusion>
          <artifactId>geronimo-jta_1.1_spec</artifactId>
          <groupId>org.apache.geronimo.specs</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-core</artifactId>
      <version>${datanucleus.version}</version>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <artifactId>transaction-api</artifactId>
          <groupId>javax.transaction</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- J2EE Servlet API. We need it to compile IndexServlet class. You can probably remove it, if you don't explicitly use Servlets -->
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-servlet_2.5_spec</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo2-api</artifactId>
      <version>2.3-eb</version>
      <exclusions>
        <exclusion>
          <groupId>javax.transaction</groupId>
          <artifactId>transaction-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>3.0.5.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.16</version>
    </dependency>

    <!-- These dependencies are here just for enabling logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.1.1</version>
    </dependency>

    <!-- Test scope -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

    <!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>${gae.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- This plug-in "enhances" your domain model objects (i.e. makes them persistent for datanucleus) -->
      <plugin>
        <groupId>org.datanucleus</groupId>
        <artifactId>maven-datanucleus-plugin</artifactId>
        <version>1.1.4</version>
        <configuration>
          <!-- Make sure this path contains your persistent classes! -->
          <mappingIncludes>**/model/*.class</mappingIncludes>
          <verbose>true</verbose>
          <enhancerName>ASM</enhancerName>
          <api>JDO</api>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>${datanucleus.version}</version>
            <exclusions>
              <exclusion>
                <groupId>javax.transaction</groupId>
                <artifactId>transaction-api</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-rdbms</artifactId>
            <version>${datanucleus.version}</version>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-enhancer</artifactId>
            <version>1.1.4</version>
          </dependency>
          <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-ec</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
          <manifest>
            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
          </manifest>
          <archive>
            <manifestEntries>
              <Specification-Title>${project.groupId}:${project.artifactId}</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Implementation-Version>${BUILD_TAG} (r${SVN_REVISION})</Implementation-Version>
            </manifestEntries>
          </archive>
          <webappDirectory>${project.build.directory}/webapp</webappDirectory>
          <warName>${project.artifactId}</warName>
        </configuration>
      </plugin>

      <!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:deploy" to upload to GAE. -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>0.8.4</version>
        <configuration>
          <serverId>appengine.google.com</serverId>
          <sdkDir>${appengine.sdk.root}</sdkDir>
          <appDir>${project.build.directory}/webapp</appDir>
          <disableUpdateCheck>true</disableUpdateCheck>
          <debugSuspend>true</debugSuspend>
          <wait>true</wait>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.kindleit</groupId>
            <artifactId>gae-runtime</artifactId>
            <version>${gae.version}</version>
            <type>pom</type>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Upload application to the appspot automatically, during release:perform -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>

      <!-- Java compiler version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Specify hard-coded project properties here -->


  <profiles>
    <!-- We can configure our integration server to activate this profile and perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com 
      automatically -->
    <profile>
      <id>integration-build</id>
      <properties>
        <gae.application.version>stage</gae.application.version>
      </properties>
    </profile>

    <!-- This profile will activate automatically during release and upload application to the http://2.latest.<applicationName>.appspot.com 
      (We might want to set the 2nd version as our applications Default version to be accessible at http://<applicationName>.appspot.com) -->
    <profile>
      <id>release-build</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>

      <properties>
        <!-- During release, set application version in appengine-web.xml to 2 -->
        <gae.application.version>release</gae.application.version>
      </properties>
    </profile>
  </profiles>

</project>
