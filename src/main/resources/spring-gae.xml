<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">



  <!-- Important system properties from GAE runtime as Spring beans for dependency injection -->
  <bean id="com.google.appengine.application.version" class="java.lang.String">
    <constructor-arg value="${com.google.appengine.application.version}" />
  </bean>
  <bean id="com.google.appengine.application.id" class="java.lang.String">
    <constructor-arg value="${com.google.appengine.application.id}" />
  </bean>
  <bean id="com.google.appengine.runtime.version" class="java.lang.String">
    <constructor-arg value="${com.google.appengine.runtime.version}" />
  </bean>
  <bean id="com.google.appengine.runtime.environment" class="java.lang.String">
    <constructor-arg value="${com.google.appengine.runtime.environment}" />
  </bean>


  <bean id="datastoreService" class="com.google.appengine.api.datastore.DatastoreServiceFactory" factory-method="getDatastoreService" lazy-init="false" />

  <bean id="asyncDatastoreService" class="com.google.appengine.api.datastore.DatastoreServiceFactory" factory-method="getAsyncDatastoreService" lazy-init="false" />

  <bean id="blobstoreService" class="com.google.appengine.api.blobstore.BlobstoreServiceFactory" factory-method="getBlobstoreService" lazy-init="false" />

  <bean id="capabilitiesService" class="com.google.appengine.api.capabilities.CapabilitiesServiceFactory" factory-method="getCapabilitiesService"
    lazy-init="false" />

  <bean id="channelService" class="com.google.appengine.api.channel.ChannelServiceFactory" factory-method="getChannelService" lazy-init="false" />

  <bean id="fileService" class="com.google.appengine.api.files.FileServiceFactory" factory-method="getFileService" lazy-init="false" />

  <bean id="imagesService" class="com.google.appengine.api.images.ImagesServiceFactory" factory-method="getImagesService" lazy-init="false" />
  <bean id="imagesService.horizontalFlip" class="com.google.appengine.api.images.ImagesServiceFactory" factory-method="makeHorizontalFlip" lazy-init="false" />
  <bean id="imagesService.verticalFlip" class="com.google.appengine.api.images.ImagesServiceFactory" factory-method="makeVerticalFlip" lazy-init="false" />
  <bean id="imagesService.imFeelingLucky" class="com.google.appengine.api.images.ImagesServiceFactory" factory-method="makeImFeelingLucky" lazy-init="false" />

  <bean id="mailService" class="com.google.appengine.api.mail.MailServiceFactory" factory-method="getMailService" lazy-init="false" />

  <bean id="memcacheService" class="com.google.appengine.api.memcache.MemcacheServiceFactory" factory-method="getMemcacheService" lazy-init="false">
    <constructor-arg value="UserCache">
      <description>Forces the use of namespace for all operations in MemcacheService</description>
    </constructor-arg>
  </bean>

  <bean id="oAuthService" class="com.google.appengine.api.oauth.OAuthServiceFactory" factory-method="getOAuthService" lazy-init="false" />

  <bean id="quotaService" class="com.google.appengine.api.quota.QuotaServiceFactory" factory-method="getQuotaService" lazy-init="false" />

  <bean id="defaultQueue" class="com.google.appengine.api.taskqueue.QueueFactory" factory-method="getDefaultQueue" lazy-init="false" />

  <bean id="urlFetchService" class="com.google.appengine.api.urlfetch.URLFetchServiceFactory" factory-method="getURLFetchService" lazy-init="false" />

  <bean id="userService" class="com.google.appengine.api.users.UserServiceFactory" factory-method="getUserService" lazy-init="false" />

  <bean id="xmppService" class="com.google.appengine.api.xmpp.XMPPServiceFactory" factory-method="getXMPPService" lazy-init="false" />
</beans>
